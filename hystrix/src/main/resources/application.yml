spring:
  application:
     name: hystrix

server:
  port: 3002


eureka:
  client:
     service-url:
        # 每个服务单元向注册中心 eureka-1:2001 登记自己提供的服务
        defaultZone: http://eureka-1:2001/eureka,http://eureka-2:2002/eureka #defaultZone 表示服务器的部署位置


ribbon:
  # 更换实例的次数
  MaxAutoRetriesNextServer: 0
  # 当前实例重试次数，尝试失败会更换下一个实例
  MaxAutoRetries: 0
  # 重试所有操作(连接、读取超时)
  OkToRetryOnAllOperations: false

# 为了测试 hystrix 短路功能，我们把 hystrix 等待超时设置得非常小（500毫秒）
# 此设置一般应大于 ribbon 的重试超时时长，例如 10 秒
#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            # 为何没生效 10秒
#            timeoutInMilliseconds: 13000

#ribbon:
#  eager-load:
#    enabled: true
#  okhttp:
#    enabled: true


#hystrix:
#  metrics:
#    enabled: true
#     #刷新间隔
#    polling-interval-ms: 2000



management:
  endpoints:
    web:
      exposure:
        # 暴露的端点 health，info，hystrix.stream
        # 通过http://localhost:3002/actuator  来展示所有通过HTTP暴露的endpoints。
        # hystrix.stream 该端点信息，需要有 hystrix 依赖，以及启动 hystrix
        include: health,info,hystrix.stream


#resilience4j:
#  circuitbreaker:
#     configs:
#        default:
#            ringBufferSizeInClosedState: 5 # 熔断器关闭时的缓冲区大小
#            ringBufferSizeInHalfOpenState: 2 # 熔断器半开时的缓冲区大小
#            waitDurationInOpenState: 10000 # 熔断器从打开到半开需要的时间
#            failureRateThreshold: 60 # 熔断器打开的失败阈值
#            eventConsumerBufferSize: 10 # 事件缓冲区大小
#            registerHealthIndicator: true # 健康监测
#            automaticTransitionFromOpenToHalfOpenEnabled: false # 是否自动从打开到半开，不需要触发
#            recordFailurePredicate:    com.example.resilience4j.exceptions.RecordFailurePredicate # 谓词设置异常是否为失败
#            recordExceptions: # 记录的异常
#                    - com.example.resilience4j.exceptions.BusinessBException
#                    - com.example.resilience4j.exceptions.BusinessAException
#            ignoreExceptions: # 忽略的异常
#                    - com.example.resilience4j.exceptions.BusinessAException
#     instances:
#        backendA:
#            baseConfig: default
#            waitDurationInOpenState: 5000
#            failureRateThreshold: 20
#        backendB:
#            baseConfig: default