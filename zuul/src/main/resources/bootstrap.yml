spring:
  cloud:
    config:
      # 启动服务发现 通过服务发现找配置中心的文件
      discovery:
        enabled: true
        # 该服务ID 是配置中心的 服务名称
        service-id: config-server
      # name指定想要从从配置中心加载的配置文件名，不用加后缀，获取多个则以逗号隔开
      # http://localhost:6001/application-zuul/dev.yml 从配置中心 查看该文件name与控制台输出一致
      name: application-zuul
      profile: dev

  rabbitmq:
    host: 192.168.189.130
    port: 5672
    username: guest
    password: guest

  # 启动 zipkin 时，连接到 rabbitmq
  # java -jar zipkin.jar --zipkin.collector.rabbitmq.uri=amqp://admin:admin@192.168.189.130:5672
  # sleuth 数据发送到 zipkin 服务地址
  zipkin:
    base-url: http://localhost:9411
  # 链路的数据发送到 zipkin 的比例
  sleuth:
    sampler:
      # 发送到 zipkin 的比例为0-1，1为100%
      # [zuul,82ffa02bcae14121,82ffa02bcae14121,true] 对应 [服务id,链路id,span id,是否发送数据到zipkin]
      probability: 1

eureka:
  client:
    service-url:
      defaultZone: http://eureka-1:2001/eureka, http://eureka-2:2002/eureka
  instance:
    # 心跳超时时间15s，默认90s。从client端最后一次发出心跳后，
    # 达到这个时间没有再次发出心跳，表示服务不可用，将它的实例从注册中心移除
    lease-expiration-duration-in-seconds: 15
    # 心跳间隔6s，默认30s。每一个服务配置后，心跳间隔和心跳超时时间会被保存在server端，
    # 不同服务的心跳频率可能不同，server端会根据保存每个实例的配置来分别探活
    lease-renewal-interval-in-seconds: 6
    # 为true，以IP地址注册到服务中心，相互注册使用IP地址，访问注册中心页面DS Replicas模块中有一个实例为localhost。
#    prefer-ip-address: true

